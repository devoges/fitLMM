v <- lapply(names(vcs) %>% remove_these("Error"),
function(l) (vcs[l]/vcs["Error"]) * Slist[[l]]) %>%
Reduce("+", .)
diag(v) <- diag(v) + 1
vinv <- solve(v)
r <- Y - X %*% beta
rss <- {t(r) %*% vinv %*% r}[1, 1]
lnum <- log(2 * pi * rss)
d <- determinant(v)$modulus
dd <- determinant(t(X) %*% vinv %*% X)$modulus
ll_REML <- -1 * (d + dd + (nrow(X) - ncol(X)) * (1 + lnum - log(nrow(X) - ncol(X)))) / 2
ll_ML <-  -1 * (d + nrow(X) * (1 + lnum - log(nrow(X)))) / 2
rss
ll_REML
attr(ll_REML, "logarithm") <- NULL
ll_REML
det <- function(x) {
r <- determinant(x)$modulus
attr(r, "logarithm") <- NULL
r
}
v <- lapply(names(vcs) %>% remove_these("Error"),
function(l) (vcs[l]/vcs["Error"]) * Slist[[l]]) %>%
Reduce("+", .)
diag(v) <- diag(v) + 1
vinv <- solve(v)
r <- Y - X %*% beta
rss <- {t(r) %*% vinv %*% r}[1, 1]
lnum <- log(2 * pi * rss)
d <- det(v)
dd <- det(t(X) %*% vinv %*% X)
ll_REML <- -1 * (d + dd + (nrow(X) - ncol(X)) * (1 + lnum - log(nrow(X) - ncol(X)))) / 2
ll_ML <-  -1 * (d + nrow(X) * (1 + lnum - log(nrow(X)))) / 2
rss
ll_REML
ll_ML
source('~/fitLMM/R/fix_GMMAT.R', echo=TRUE)
source('~/fitLMM/R/fix_lmer.R', echo=TRUE)
set.seed(212)
X <- matrix(rnorm(100 * 2), 100, 2)
Z1 <- matrix(rnorm(100 * 100), 100, 100)
Z2 <- matrix(rnorm(100 * 100), 100, 100)
e <- matrix(rnorm(100), 100, 1)
b1 <- matrix(rnorm(100), 100, 1)
b2 <- matrix(rnorm(100), 100, 1)
Y <- X %*% matrix(1, 2) + Z1 %*% b1 + Z2 %*% b2 + e
S1 <- tcrossprod(Z1)
S2 <- tcrossprod(Z2)
Zlist = list("one" = Z1,
"two" = Z2)
Slist = list("one" = S1,
"two" = S2)
REML = TRUE
one <- fit_lmer(Y = Y, X = X, Zlist = Zlist, REML = TRUE)
two <- fit_gmmat(Y = Y, X = X, Slist = Slist, REML = TRUE)
one$beta
two$beta
one$vcs
two$vcs
c(one$ll_REML, one$ll_ML, one$rss) %>% str
c(two$ll_REML, two$ll_ML, two$rss) %>% str
set.seed(212)
X <- matrix(rnorm(100 * 2), 100, 2)
Z1 <- matrix(rnorm(100 * 100), 100, 100)
Z2 <- matrix(rnorm(100 * 100), 100, 100)
e <- matrix(rnorm(100), 100, 1)
b1 <- matrix(rnorm(100), 100, 1)
b2 <- matrix(rnorm(100), 100, 1)
Y <- X %*% matrix(1, 2) + Z1 %*% b1 + Z2 %*% b2 + e
S1 <- tcrossprod(Z1)
S2 <- tcrossprod(Z2)
Zlist = list("one" = Z1,
"two" = Z2)
Slist = list("one" = S1,
"two" = S2)
REML = TRUE
one <- fit_lmer(Y = Y, X = X, Zlist = Zlist, REML = TRUE)
two <- fit_gmmat(Y = Y, X = X, Slist = Slist, REML = TRUE)
one$beta
two$beta
one$vcs
two$vcs
c(one$ll_REML, one$ll_ML, one$rss)
c(two$ll_REML, two$ll_ML, two$rss)
source('~/fitLMM/R/fix_lmer.R', echo=TRUE)
set.seed(212)
X <- matrix(rnorm(100 * 2), 100, 2)
Z1 <- matrix(rnorm(100 * 100), 100, 100)
Z2 <- matrix(rnorm(100 * 100), 100, 100)
e <- matrix(rnorm(100), 100, 1)
b1 <- matrix(rnorm(100), 100, 1)
b2 <- matrix(rnorm(100), 100, 1)
Y <- X %*% matrix(1, 2) + Z1 %*% b1 + Z2 %*% b2 + e
S1 <- tcrossprod(Z1)
S2 <- tcrossprod(Z2)
Zlist = list("one" = Z1,
"two" = Z2)
Slist = list("one" = S1,
"two" = S2)
REML = TRUE
one <- fit_lmer(Y = Y, X = X, Zlist = Zlist, REML = TRUE)
two <- fit_gmmat(Y = Y, X = X, Slist = Slist, REML = TRUE)
one$beta
two$beta
one$vcs
two$vcs
c(one$ll_REML, one$ll_ML, one$rss)
c(two$ll_REML, two$ll_ML, two$rss)
?lm
lm
X
set.seed(212)
X <- matrix(rnorm(100 * 2), 100, 2)
Z1 <- matrix(rnorm(100 * 100), 100, 100)
Z2 <- matrix(rnorm(100 * 100), 100, 100)
e <- matrix(rnorm(100), 100, 1)
b1 <- matrix(rnorm(100), 100, 1)
b2 <- matrix(rnorm(100), 100, 1)
Y <- X %*% matrix(1, 2) + Z1 %*% b1 + Z2 %*% b2 + e
colnames(X) <- c("taco", "bell")
S1 <- tcrossprod(Z1)
S2 <- tcrossprod(Z2)
Zlist = list("one" = Z1,
"two" = Z2)
Slist = list("one" = S1,
"two" = S2)
REML = TRUE
one <- fit_lmer(Y = Y, X = X, Zlist = Zlist, REML = TRUE)
two <- fit_gmmat(Y = Y, X = X, Slist = Slist, REML = TRUE)
one$beta
two$beta
one$vcs
two$vcs
c(one$ll_REML, one$ll_ML, one$rss)
c(two$ll_REML, two$ll_ML, two$rss)
model <- lm(Y ~ X)
model
model <- lm(Y ~ -1 + .,
data = X)
model <- lm(Y ~ -1 + .,
data = as.data.frame(X))
model
beta <- model$coefficients
beta
model <- lm(Y ~ -1 + .,
data = as.data.frame(X))
beta <- model$coefficients
beta <- beta[order(names(beta))]
beta
summary(foo)
summary(model)
terms(model)
anova(model)
model <- lm(Y ~ -1 + .,
data = as.data.frame(X))
beta <- model$coefficients
beta <- beta[order(names(beta))]
r <- Y - X %*% beta
rss <- t(r) %*% r
rss
rss <- {t(r) %*% r}[1, 1]
rss
rss <- {t(r) %*% r}[1, 1]
if (REML) {
vcs <- c("Error" = rss / nrow(X))
}
vcs
rss/100
set.seed(212)
X <- matrix(rnorm(100 * 2), 100, 2)
Z1 <- matrix(rnorm(100 * 100), 100, 100)
Z2 <- matrix(rnorm(100 * 100), 100, 100)
e <- matrix(rnorm(100), 100, 1)
b1 <- matrix(rnorm(100), 100, 1)
b2 <- matrix(rnorm(100), 100, 1)
# Y <- X %*% matrix(1, 2) + Z1 %*% b1 + Z2 %*% b2 + e
Y <- X %*% matrix(1, 2) + e
colnames(X) <- c("taco", "bell")
model <- lm(Y ~ -1 + .,
data = as.data.frame(X))
beta <- model$coefficients
beta <- beta[order(names(beta))]
r <- Y - X %*% beta
rss <- {t(r) %*% r}[1, 1]
rss
if (REML) {
vcs <- c("Error" = rss / nrow(X))
}
vcs
rss <- {t(r) %*% r}[1, 1]
if (REML) {
vcs <- c("Error" = rss / nrow(X))
} else {
vcs <- c("Error" = rss / (nrow(X) - ncol(X)))
}
diag(5)
determinant(diag(5))
determinant(2*diag(5))
log(2^5)
lnum <- log(2 * pi * rss)
lnum
det <- function(x) {
r <- determinant(x)$modulus
attr(r, "logarithm") <- NULL
r
}
model <- lm(Y ~ -1 + .,
data = as.data.frame(X))
beta <- model$coefficients
beta <- beta[order(names(beta))]
r <- Y - X %*% beta
rss <- {t(r) %*% r}[1, 1]
if (REML) {
vcs <- c("Error" = rss / nrow(X))
} else {
vcs <- c("Error" = rss / (nrow(X) - ncol(X)))
}
lnum <- log(2 * pi * rss)
d <- 0
dd <- det(t(X) %*% X)
ll_REML <- -1 * (d + dd + (nrow(X) - ncol(X)) * (1 + lnum - log(nrow(X) - ncol(X)))) / 2
ll_ML <-  -1 * (d + nrow(X) * (1 + lnum - log(nrow(X)))) / 2
ll_REML
logLik(model, REML = TRUE)
logLik(model, REML = FALSE)
ll_ML
model <- lm(Y ~ -1 + .,
data = as.data.frame(X))
beta <- model$coefficients
beta <- beta[order(names(beta))]
r <- Y - X %*% beta
rss <- {t(r) %*% r}[1, 1]
if (REML) {
vcs <- c("Error" = rss / nrow(X))
} else {
vcs <- c("Error" = rss / (nrow(X) - ncol(X)))
}
vcs
model
vcs
summary(model)
1.029^2
x=summary(model)
x$sigma
model <- lm(Y ~ -1 + .,
data = as.data.frame(X))
beta <- model$coefficients
beta <- beta[order(names(beta))]
r <- Y - X %*% beta
rss <- {t(r) %*% r}[1, 1]
if (REML) {
vcs <- c("Error" = rss / nrow(X))
} else {
vcs <- c("Error" = rss / (nrow(X) - ncol(X)))
vcs <- summary(model)$sigma^2
}
lnum <- log(2 * pi * rss)
d <- 0
dd <- det(t(X) %*% X)
ll_REML <- -1 * (d + dd + (nrow(X) - ncol(X)) * (1 + lnum - log(nrow(X) - ncol(X)))) / 2
ll_ML <-  -1 * (d + nrow(X) * (1 + lnum - log(nrow(X)))) / 2
ll_REML
ll_ML
logLik(model, REML = TRUE)
logLik(model, REML = FALSE)
model$coefficients
beta
model <- lm(Y ~ -1 + .,
data = as.data.frame(X))
beta <- model$coefficients
beta <- beta[order(names(beta))]
r <- Y - X %*% beta
rss <- {t(r) %*% r}[1, 1]
rss
r
sum(r^2)
r^2
r^2 %>% sum
beta
solve(t(X)%*%X)%*%t(X)%*%Y
beta <- solve(t(X)%*%X)%*%t(X)%*%Y
r <- Y - X %*% beta
rss <- {t(r) %*% r}[1, 1]
if (REML) {
vcs <- c("Error" = rss / nrow(X))
} else {
vcs <- c("Error" = rss / (nrow(X) - ncol(X)))
vcs <- summary(model)$sigma^2
}
lnum <- log(2 * pi * rss)
d <- 0
dd <- det(t(X) %*% X)
ll_REML <- -1 * (d + dd + (nrow(X) - ncol(X)) * (1 + lnum - log(nrow(X) - ncol(X)))) / 2
ll_ML <-  -1 * (d + nrow(X) * (1 + lnum - log(nrow(X)))) / 2
ll_REML
logLik(model, REML = TRUE)
logLik(model, REML = FALSE)
ll_M
ll_ML
model <- lm(Y ~ -1 + .,
data = as.data.frame(X))
beta <- model$coefficients
beta <- beta[order(names(beta))]
beta <- solve(t(X)%*%X)%*%t(X)%*%Y
r <- Y - X %*% beta
rss <- {t(r) %*% r}[1, 1]
if (REML) {
vcs <- c("Error" = rss / nrow(X))
} else {
vcs <- c("Error" = rss / (nrow(X) - ncol(X)))
}
lnum <- log(2 * pi * rss)
d <- 0
dd <- det(t(X) %*% X)
ll_REML <- -1 * (d + dd + (nrow(X) - ncol(X)) * (1 + lnum - log(nrow(X) - ncol(X)))) / 2
ll_ML <-  -1 * (d + nrow(X) * (1 + lnum - log(nrow(X)))) / 2
ll_REML
logLik(model, REML = TRUE)
ll_ML
logLik(model, REML = FALSE)
model <- lm(Y ~ -1 + .,
data = as.data.frame(X))
beta <- model$coefficients
beta <- beta[order(names(beta))]
# beta <- solve(t(X)%*%X)%*%t(X)%*%Y
r <- Y - X %*% beta
rss <- {t(r) %*% r}[1, 1]
if (REML) {
vcs <- c("Error" = rss / nrow(X))
} else {
vcs <- c("Error" = rss / (nrow(X) - ncol(X)))
}
lnum <- log(2 * pi * rss)
d <- 0
dd <- det(t(X) %*% X)
ll_REML <- -1 * (d + dd + (nrow(X) - ncol(X)) * (1 + lnum - log(nrow(X) - ncol(X)))) / 2
ll_ML <-  -1 * (d + nrow(X) * (1 + lnum - log(nrow(X)))) / 2
ll_REML
model <- lm(Y ~ -1 + .,
data = as.data.frame(X))
beta <- model$coefficients
beta <- beta[order(names(beta))]
beta1 <- {solve(t(X)%*%X)%*%t(X)%*%Y}[, 1]
beta
beta1
model <- lm(Y ~ -1 + .,
data = as.data.frame(X))
beta <- model$coefficients
beta <- beta[order(names(beta))]
beta1 <- {solve(t(X)%*%X)%*%t(X)%*%Y}[, 1]
r <- Y - X %*% beta
rss <- {t(r) %*% r}[1, 1]
if (REML) {
vcs <- c("Error" = rss / nrow(X))
} else {
vcs <- c("Error" = rss / (nrow(X) - ncol(X)))
}
lnum <- log(2 * pi * rss)
d <- 0
dd <- det(t(X) %*% X)
ll_REML <- -1 * (d + dd + (nrow(X) - ncol(X)) * (1 + lnum - log(nrow(X) - ncol(X)))) / 2
ll_ML <-  -1 * (d + nrow(X) * (1 + lnum - log(nrow(X)))) / 2
c(ll_REML, logLik(model, REML = TRUE))
c(ll_ML, logLik(model, REML = FALSE))
model <- lm(Y ~ -1 + .,
data = as.data.frame(X))
beta <- model$coefficients
beta <- beta[order(names(beta))]
beta <- {solve(t(X)%*%X)%*%t(X)%*%Y}[, 1]
r <- Y - X %*% beta
rss <- {t(r) %*% r}[1, 1]
if (REML) {
vcs <- c("Error" = rss / nrow(X))
} else {
vcs <- c("Error" = rss / (nrow(X) - ncol(X)))
}
lnum <- log(2 * pi * rss)
d <- 0
dd <- det(t(X) %*% X)
ll_REML <- -1 * (d + dd + (nrow(X) - ncol(X)) * (1 + lnum - log(nrow(X) - ncol(X)))) / 2
ll_ML <-  -1 * (d + nrow(X) * (1 + lnum - log(nrow(X)))) / 2
c(ll_REML, logLik(model, REML = TRUE))
c(ll_ML, logLik(model, REML = FALSE))
beta1 <- {solve(t(X)%*%X)%*%t(X)%*%Y}[, 1]
beta1
model <- lm(Y ~ -1 + .,
data = as.data.frame(X))
beta <- model$coefficients
beta <- beta[order(names(beta))]
beta1 <- {solve(t(X)%*%X)%*%t(X)%*%Y}[, 1]
beta1 <- beta1[order(names(beta1))]
beta
beta
beta
beta1
round(beta, 1)
round(beta, 10)
round(beta1, 10)
beta
beta1
abs(beta - beta1)
sum(abs(beta - beta1))
model <- lm(Y ~ -1 + .,
data = as.data.frame(X))
beta <- model$coefficients
beta <- beta[order(names(beta))]
beta1 <- {solve(t(X)%*%X)%*%t(X)%*%Y}[, 1]
beta1 <- beta1[order(names(beta1))]
r <- Y - X %*% beta1
rss <- {t(r) %*% r}[1, 1]
if (REML) {
vcs <- c("Error" = rss / nrow(X))
} else {
vcs <- c("Error" = rss / (nrow(X) - ncol(X)))
}
lnum <- log(2 * pi * rss)
d <- 0
dd <- det(t(X) %*% X)
ll_REML <- -1 * (d + dd + (nrow(X) - ncol(X)) * (1 + lnum - log(nrow(X) - ncol(X)))) / 2
ll_ML <-  -1 * (d + nrow(X) * (1 + lnum - log(nrow(X)))) / 2
c(ll_REML, logLik(model, REML = TRUE))
c(ll_ML, logLik(model, REML = FALSE))
model <- lm(Y ~ -1 + .,
data = as.data.frame(X))
beta <- model$coefficients
beta <- beta[order(names(beta))]
beta1 <- {solve(t(X)%*%X)%*%t(X)%*%Y}[, 1]
beta1 <- beta1[order(names(beta1))]
r <- Y - X %*% beta
rss <- {t(r) %*% r}[1, 1]
if (REML) {
vcs <- c("Error" = rss / nrow(X))
} else {
vcs <- c("Error" = rss / (nrow(X) - ncol(X)))
}
lnum <- log(2 * pi * rss)
d <- 0
dd <- det(t(X) %*% X)
ll_REML <- -1 * (d + dd + (nrow(X) - ncol(X)) * (1 + lnum - log(nrow(X) - ncol(X)))) / 2
ll_ML <-  -1 * (d + nrow(X) * (1 + lnum - log(nrow(X)))) / 2
c(ll_REML, logLik(model, REML = TRUE))
c(ll_ML, logLik(model, REML = FALSE))
model <- lm(Y ~ -1 + .,
data = as.data.frame(X))
beta <- model$coefficients
r <- Y - X %*% beta
rss <- {t(r) %*% r}[1, 1]
if (REML) {
vcs <- c("Error" = rss / nrow(X))
} else {
vcs <- c("Error" = rss / (nrow(X) - ncol(X)))
}
lnum <- log(2 * pi * rss)
d <- 0
dd <- det(t(X) %*% X)
ll_REML <- -1 * (d + dd + (nrow(X) - ncol(X)) * (1 + lnum - log(nrow(X) - ncol(X)))) / 2
ll_ML <-  -1 * (d + nrow(X) * (1 + lnum - log(nrow(X)))) / 2
c(ll_REML, logLik(model, REML = TRUE))
c(ll_ML, logLik(model, REML = FALSE))
beta <- beta[order(names(beta))]
c("Error" = rss / nrow(X))
c("Error" = rss / (nrow(X) - ncol(X)))
model <- lm(Y ~ -1 + .,
data = as.data.frame(X))
beta <- model$coefficients
r <- Y - X %*% beta
rss <- {t(r) %*% r}[1, 1]
if (REML) {
vcs <- c("Error" = rss / nrow(X))
} else {
vcs <- c("Error" = rss / (nrow(X) - ncol(X)))
}
lnum <- log(2 * pi * rss)
d <- 0
dd <- det(t(X) %*% X)
ll_REML <- -1 * (d + dd + (nrow(X) - ncol(X)) * (1 + lnum - log(nrow(X) - ncol(X)))) / 2
ll_ML <-  -1 * (d + nrow(X) * (1 + lnum - log(nrow(X)))) / 2
beta <- beta[order(names(beta))]
beta
logLik(model, TRUE)
logLik(model, FALSE)
ll_REML
set.seed(21242)
X <- matrix(rnorm(100 * 2), 100, 2)
Z1 <- matrix(rnorm(100 * 100), 100, 100)
Z2 <- matrix(rnorm(100 * 100), 100, 100)
e <- matrix(rnorm(100), 100, 1)
b1 <- matrix(rnorm(100), 100, 1)
b2 <- matrix(rnorm(100), 100, 1)
# Y <- X %*% matrix(1, 2) + Z1 %*% b1 + Z2 %*% b2 + e
Y <- X %*% matrix(1, 2) + e
colnames(X) <- c("taco", "bell")
S1 <- tcrossprod(Z1)
S2 <- tcrossprod(Z2)
Zlist = list("one" = Z1,
"two" = Z2)
Slist = list("one" = S1,
"two" = S2)
REML = TRUE
one <- fit_lmer(Y = Y, X = X, Zlist = Zlist, REML = TRUE)
two <- fit_gmmat(Y = Y, X = X, Slist = Slist, REML = TRUE)
one$beta
two$beta
one$vcs
two$vcs
c(one$ll_REML, one$ll_ML, one$rss)
c(two$ll_REML, two$ll_ML, two$rss)
library(fitLMM)
library(fitLMM)
library(fitLMM)
library(fitLMM)
library(fitLMM)
